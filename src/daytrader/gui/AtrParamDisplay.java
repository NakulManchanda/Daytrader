/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package daytrader.gui;

import daytrader.datamodel.AtrClassGrid;
import daytrader.gui.DaytraderMainForm;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author Roy
 */
public class AtrParamDisplay extends javax.swing.JPanel {

    /**
     * Creates new form AtrParamDisplay
     */
    public AtrParamDisplay() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAtrParamControls = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        atrParamJTableTwo1 = new daytrader.gui.tables.AtrParamJTableTwo();

        pnlAtrParamControls.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAtrParamControlsLayout = new javax.swing.GroupLayout(pnlAtrParamControls);
        pnlAtrParamControls.setLayout(pnlAtrParamControlsLayout);
        pnlAtrParamControlsLayout.setHorizontalGroup(
            pnlAtrParamControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAtrParamControlsLayout.createSequentialGroup()
                .addComponent(btnSave)
                .addGap(0, 678, Short.MAX_VALUE))
        );
        pnlAtrParamControlsLayout.setVerticalGroup(
            pnlAtrParamControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSave)
        );

        jScrollPane2.setViewportView(atrParamJTableTwo1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAtrParamControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlAtrParamControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        saveParameter();
    }//GEN-LAST:event_btnSaveActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private daytrader.gui.tables.AtrParamJTableTwo atrParamJTableTwo1;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlAtrParamControls;
    // End of variables declaration//GEN-END:variables

    private void saveParameter() {
        AtrClassGrid model = DaytraderMainForm.atrData;
        if (model.isUsable()) {
            if (model.writeAsXMLToStream(null)) {
                JOptionPane.showMessageDialog(null, "Saved to XML File", "Saved", JOptionPane.INFORMATION_MESSAGE);
            } else {
                File dataFile = new File(AtrClassGrid.ATRPARAM_FILENAME);
                File oldDataFile = new File(AtrClassGrid.ATRPARAM_FILENAME_OLD);
                if (dataFile.exists()) {
                    dataFile.delete();
                    oldDataFile.renameTo(dataFile);
                }
                JOptionPane.showMessageDialog(null, "Error Saving to XML File", "Data NOT Saved", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "The grid cannot be used. All time values MUST be sequential", "Gaps detected in grid...", JOptionPane.ERROR_MESSAGE);
        }
    }
}
