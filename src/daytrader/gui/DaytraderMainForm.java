/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package daytrader.gui;

import com.ib.client.EClientSocket;
import daytrader.datamodel.AtrClassGrid;
import daytrader.datamodel.DTConstants;
import daytrader.datamodel.PrimeDataModel;
import daytrader.historicRequestSystem.HistoricRequestProcessingSystem;
import java.awt.EventQueue;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author Roy
 */
public class DaytraderMainForm extends javax.swing.JFrame {
    
    public static PrimeDataModel data = new PrimeDataModel();
    public static AtrClassGrid atrData = new AtrClassGrid();
    
    private DebugDisplay pnlDebug;
    private PutupStatusDisplay pnlStatus;

    /**
     * Creates new form DaytraderMainForm
     */
    public DaytraderMainForm() {
        initComponents();
        //Ensure that client disconnects when window is closed
        if(null != pnlDebug){
            this.addWindowListener(new CloseOperations());
        }
        if(EventQueue.isDispatchThread()){
            DTConstants.startBackupManager();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpTabs = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
        );

        jtpTabs.addTab("Putups", new PutupsDisplay());
        pnlStatus = new daytrader.gui.PutupStatusDisplay();
        DTConstants.STATUS_DISPLAY = pnlStatus;
        jtpTabs.addTab("Putup Status", pnlStatus);
        jtpTabs.addTab("Ranging Parameters", new AtrParamDisplay());
        pnlDebug = new DebugDisplay();
        jtpTabs.addTab("Debug Display", pnlDebug);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DaytraderMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DaytraderMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DaytraderMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DaytraderMainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DaytraderMainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane jtpTabs;
    // End of variables declaration//GEN-END:variables

    private class CloseOperations extends WindowAdapter {

        @Override
        public void windowClosing(WindowEvent e) {
            DTConstants.stopBackupManager();
            if(HistoricRequestProcessingSystem.isInitialised()){
                HistoricRequestProcessingSystem.getInstance().shutdown();
            }
            
            if(null != pnlDebug){
                EClientSocket m_client = pnlDebug.getM_client();
                if(m_client.isConnected()){
                    pnlDebug.onDisconnect();
                }
            }
        }
    }

}
